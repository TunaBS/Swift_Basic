\\https://docs.swift.org/swift-book/documentation/the-swift-programming-language/closures
let names = ["Chris", "Alex", "Ewa", "Barry", "Daniella"]
print(names)
func backward(_ s1: String, _ s2: String) -> Bool { // this is a function
    return s1 > s2
}
var reversedNames = names.sorted(by: backward)
print(reversedNames)
reversedNames = names.sorted(by: { (s1: String, s2: String) -> Bool in //same implementaton using closure
    return s1 > s2
})
print(reversedNames)
//implicit return from single-expression closure
reversedNames = names.sorted(by: { s1, s2 in s1 > s2 } )
print(reversedNames)
//shorthand arguement names
reversedNames = names.sorted(by: { $0 > $1 } )
print(reversedNames)
//operator methods
reversedNames = names.sorted(by: >)
print("operator methods \(reversedNames)")
let digitNames = [
    0: "Zero", 1: "One", 2: "Two",   3: "Three", 4: "Four",
    5: "Five", 6: "Six", 7: "Seven", 8: "Eight", 9: "Nine"
]
let numbers = [16, 58, 510]
print(numbers)